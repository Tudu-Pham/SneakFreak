// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int     @id @default(autoincrement())
  first_name String  @db.VarChar(255)
  last_name  String  @db.VarChar(255)
  email      String  @unique @db.VarChar(255)
  password   String  @db.VarChar(255)
  role       Role    @default(USER)
  orders     Order[]
  Cart       Cart?

  @@map("users")
}

enum Role {
  ADMIN
  USER
}

model secondhand {
  id           Int      @id @default(autoincrement())
  full_name    String?  @db.VarChar(255)
  email        String?  @db.VarChar(255)
  phone        Int?     @db.Int
  brand        String?  @db.VarChar(255)
  model_name   String?  @db.VarChar(255)
  size         Int?     @db.Int
  condition    String?  @db.VarChar(255)
  box          String?  @db.VarChar(255)
  yearPurchase Int?     @db.Int
  retailPrice  Decimal? @db.Decimal(10, 2)
  desiredPrice Decimal? @db.Decimal(10, 2)
  images       String?  @db.VarChar(255)
  comment      String?  @db.VarChar(255)
}

model Order {
  id         Int      @id @default(autoincrement())
  order_code String   @unique @db.VarChar(10)
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  created_at DateTime @default(now())
  totalPrice Int
}

model Product {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  price      Decimal
  image      String       @db.VarChar(255)
  detailDesc String       @db.Text
  shortDesc  String       @db.VarChar(500)
  quantity   Int
  sold       Int          @default(0)
  brand      String       @db.VarChar(255)
  condition  String       @db.VarChar(255)
  CartDetail CartDetail[]

  @@map("products")
}

model Cart {
  id  Int @id @default(autoincrement())
  sum Int

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  cartDetails CartDetail[]

  @@map("carts")
}

model CartDetail {
  id       Int @id @default(autoincrement())
  price    Int
  quantity Int

  cart   Cart @relation(fields: [cartId], references: [id])
  cartId Int

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@map("cart_detail")
}
